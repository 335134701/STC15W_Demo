C51 COMPILER V9.60.0.0   MCU_HAND_UART                                                     06/14/2020 15:26:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MCU_HAND_UART
OBJECT MODULE PLACED IN .\Objects\MCU_Hand_Uart.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE MCU_Hand_Uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\MCU_Hand_Uart.lst) TABS(2) OBJECT(.\Objects\MCU_Hand_Uart.obj)

line level    source

   1          #include "MCU_Hand_Uart.h"
   2          
   3          //数据包序号
   4          unsigned char Sn=0x00;
   5          
   6          
   7          //========================================================================
   8          // 函数: void UART_Receive_Processing()
   9          // 描述: UART1接收处理函数
  10          // 参数: 无
  11          // 返回: 无
  12          // 版本: V1.0, 2020.04.24
  13          //========================================================================
  14          void UART_Receive_Processing()
  15          {
  16   1        //判断是否是有效的处理命令标记位
  17   1        unsigned char Uart_Receive_flag=0;
  18   1        
  19   1        //校验接收数据是否正常
  20   1        Uart_Receive_flag=Uart_Pretreatment();
  21   1        if(Uart_Receive_flag)
  22   1        {
  23   2          Wifi_flag=0x01;
  24   2          //获取包序号并赋值给Sn
  25   2          Sn=RX1_Buffer[5];
  26   2          switch(RX1_Buffer[4])
  27   2          {
  28   3            //WiFi模组获取设备信息
  29   3            case 0x01:Data_Encapsulation(Device_information,sizeof(Device_information),0x00,Sn,0x00);break;
  30   3            //WiFi模组控制设备,读取设备的当前状态
  31   3            case 0x03:
  32   3              //WiFi模 组 控 制 设 备
  33   3              if(RX1_Buffer[8]==0x01)
  34   3              {
  35   4                //收到数据后，mcu控制设备函数
  36   4                MCU_Application_Control(RX1_Buffer);          
  37   4                Data_Encapsulation(Mcu_send,9,0x04,Sn,0x00);
  38   4                //MCU主动上报当前状态
  39   4                Sn=Sn+0x01;
  40   4                Data_Encapsulation(Mcu_send,14,0x05,Sn,0x04);
  41   4                MCU_OLED_StatusChange(RX1_Buffer[9]);
  42   4              }
  43   3              // WiFi模 组 读 取 设 备 的 当 前 状 态
  44   3              if(RX1_Buffer[8]==0x02){Data_Encapsulation(Mcu_send,14,0x04,Sn,0x03);}break;  
  45   3            //MCU主动上报当前状态WIFI模组回复
  46   3            case 0x06:  break;
  47   3            //WiFi模组向MCU发送心跳
  48   3            case 0x07:
  49   3                //关闭定时器，将计数器置0
  50   3                TR0=0;Timer0_Count=0;
  51   3                Data_Encapsulation(Mcu_send,9,0x08,Sn,0x00);
  52   3                //打开定时器
  53   3                TR0=1;          
  54   3              break;  
C51 COMPILER V9.60.0.0   MCU_HAND_UART                                                     06/14/2020 15:26:56 PAGE 2   

  55   3            //通知WIFI模组进入配置模式后接收WIFI模组回复
  56   3            case 0x0a:
  57   3              //OLED_CLS_Local(0,2,X_WIDTH,Y_WIDTH);
  58   3              //OLED_P6x8Str(2,2,"Enter Wifi Config!");
  59   3              break;
  60   3            //重置WiFi模组后接收WIFI模组回复
  61   3            case 0x0c:
  62   3              //OLED_CLS_Local(0,2,X_WIDTH,Y_WIDTH);
  63   3              //OLED_P6x8Str(2,2,"Wifi Reset Success!");
  64   3              break;
  65   3            //WiFi模组向MCU推送WiFi状态
  66   3            case 0x0d:
  67   3                MCU_OLED_MessageShow(RX1_Buffer[4],RX1_Buffer[8],RX1_Buffer[9]);
  68   3                if(Phone_flag){MCU_OLED_StatusChange(0x00);}
  69   3                Data_Encapsulation(Mcu_send,9,0x0e,Sn,0x00);
  70   3              break;
  71   3            case 0x0f:Data_Encapsulation(Mcu_send,9,0x10,Sn,0x00);break;
  72   3            //WiFi模组非法数据包通知
  73   3            case 0x11:Data_Encapsulation(Mcu_send,10,0x12,Sn,RX1_Buffer[8]);break;      
  74   3            //MCU请求WiFi进入可绑定模式，WiFi模组回复 
  75   3            case 0x16:
  76   3              break;    
  77   3            //MCU请求获取网络时间，WiFi模组回复 
  78   3            case 0x18:
  79   3              break;
  80   3            case 0x2a:
  81   3              //MCU请求WiFi重启，WiFi模组回复
  82   3              break;
  83   3            }
  84   2            RST_Uart_Timer();
  85   2        } 
  86   1      }
  87          //========================================================================
  88          // 函数: void UART_Send_Processing()
  89          // 描述: UART1发送处理函数
  90          // 参数: 无
  91          // 返回: 无
  92          // 版本: V1.0, 2020.04.24
  93          //========================================================================
  94          void UART_Send_Processing()
  95          {
  96   1        
  97   1        unsigned char flag=0;
  98   1        /**  配置WiFi模式(Soft模式)  **/
  99   1        if(Set_soft_flag==0)      {Delay_ms(10);  if(Set_soft_flag==0)      {flag=0x01;} }
 100   1        /**  配置WiFi模式(AP模式)  **/
 101   1        if(Set_AP_flag==0)        {Delay_ms(10);  if(Set_AP_flag==0)        {flag=0x02;} }
 102   1        /**  重置WiFi信息  **/
 103   1        if(Reset_message_flag==0) {Delay_ms(10);  if(Reset_message_flag==0) {flag=0x03;} }
 104   1        /**  WiFi进入可绑定模式  **/
 105   1        if(Bindable_wifi_flag==0) {Delay_ms(10);  if(Bindable_wifi_flag==0) {flag=0x04;} }
 106   1        /**   重启WiFi模组   **/
 107   1        if(Restart_wifi_flag==0)  {Delay_ms(10);  if(Restart_wifi_flag==0)  {flag=0x05;} }
 108   1        
 109   1        if(flag!=0&&Wifi_flag==1)
 110   1        {
 111   2          REN=0;
 112   2          if(flag<=0x05){OLED_CLS_Local(0,2,X_WIDTH,Y_WIDTH);}
 113   2          Sn=Sn+0x01;
 114   2          switch(flag)
 115   2          {
 116   3            /**  配置WiFi模式(Soft模式)  **/
C51 COMPILER V9.60.0.0   MCU_HAND_UART                                                     06/14/2020 15:26:56 PAGE 3   

 117   3            case 0x01:
 118   3                OLED_P6x8Str(2,2,"Configure Wifi:Soft");
 119   3                Data_Encapsulation(Mcu_send,10,0x09,Sn,0x01);
 120   3              break;
 121   3            /**  配置WiFi模式(AP模式)  **/
 122   3            case 0x02:
 123   3                OLED_P6x8Str(2,2,"Configure Wifi:AP");
 124   3                Data_Encapsulation(Mcu_send,10,0x09,Sn,0x02);
 125   3              break;
 126   3            /**  重置WiFi信息  **/
 127   3            case 0x03:
 128   3                OLED_P6x8Str(2,2,"Reset Wifi!");
 129   3                Data_Encapsulation(Mcu_send,9,0x0b,Sn,0x00);
 130   3              break;
 131   3            /**  WiFi进入可绑定模式  **/
 132   3            case 0x04:
 133   3                OLED_P6x8Str(2,2,"Enter bindable mode!");
 134   3                Data_Encapsulation(Mcu_send,9,0x15,Sn,0x00);
 135   3              break;
 136   3            /**   重启WiFi模组   **/
 137   3            case 0x05:
 138   3                OLED_P6x8Str(2,2,"Restart Wifi!");
 139   3                Data_Encapsulation(Mcu_send,9,0x29,Sn,0x00);
 140   3              break;
 141   3          }
 142   2          while(Set_soft_flag==0||Set_AP_flag==0||Reset_message_flag==0||Bindable_wifi_flag==0||Restart_wifi_flag=
             -=0);
 143   2          RST_Uart_Timer();
 144   2        }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    912    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =      1       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
