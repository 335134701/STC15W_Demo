C51 COMPILER V9.60.0.0   MCU_HAND_UART                                                     05/31/2020 18:43:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MCU_HAND_UART
OBJECT MODULE PLACED IN .\Objects\MCU_Hand_Uart.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE MCU_Hand_Uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\MCU_Hand_Uart.lst) TABS(2) OBJECT(.\Objects\MCU_Hand_Uart.obj)

line level    source

   1          #include "MCU_Hand_Uart.h"
   2          
   3          //数据包序号
   4          unsigned char Sn=0x00;
   5          
   6          
   7          //========================================================================
   8          // 函数: void UART_Receive_Processing()
   9          // 描述: UART1接收处理函数
  10          // 参数: 无
  11          // 返回: 无
  12          // 版本: V1.0, 2020.04.24
  13          //========================================================================
  14          void UART_Receive_Processing()
  15          {
  16   1        //判断是否是有效的处理命令标记位
  17   1        unsigned char Uart_Receive_flag=0;
  18   1        //校验接收数据是否正常
  19   1        Uart_Receive_flag=Uart_Pretreatment();
  20   1        if(Uart_Receive_flag)
  21   1        {
  22   2          Wifi_flag=0x01;
  23   2          //获取包序号并赋值给Sn
  24   2          Sn=RX1_Buffer[5];
  25   2          switch(RX1_Buffer[4])
  26   2          {
  27   3            //WiFi模组获取设备信息
  28   3            case 0x01:Data_Encapsulation(Device_information,sizeof(Device_information),0x00,Sn,0x00);break;
  29   3            //WiFi模组控制设备,读取设备的当前状态
  30   3            case 0x03:
  31   3              //WiFi模 组 控 制 设 备
  32   3              if(RX1_Buffer[8]==0x01)
  33   3              {
  34   4                //收到数据后，mcu控制设备函数
  35   4                MCU_Application_Control(RX1_Buffer);          
  36   4                Data_Encapsulation(Mcu_send,9,0x04,Sn,0x00);
  37   4                //MCU主动上报当前状态
  38   4                Sn=Sn+0x01;
  39   4                Data_Encapsulation(Mcu_send,14,0x05,Sn,0x04);
  40   4                MCU_OLED_StatusChange(RX1_Buffer[9]);
  41   4              }
  42   3              // WiFi模 组 读 取 设 备 的 当 前 状 态
  43   3              if(RX1_Buffer[8]==0x02){Data_Encapsulation(Mcu_send,14,0x04,Sn,0x03);}break;  
  44   3            //MCU主动上报当前状态WIFI模组回复
  45   3            case 0x06:  break;
  46   3            //WiFi模组向MCU发送心跳
  47   3            case 0x07:
  48   3                //关闭定时器，将计数器置0
  49   3                TR0=0;Timer0_Count=0;
  50   3                Data_Encapsulation(Mcu_send,9,0x08,Sn,0x00);
  51   3                //打开定时器
  52   3                TR0=1;          
  53   3              break;  
  54   3            //通知WIFI模组进入配置模式后接收WIFI模组回复
C51 COMPILER V9.60.0.0   MCU_HAND_UART                                                     05/31/2020 18:43:52 PAGE 2   

  55   3            case 0x0a:
  56   3              //OLED_CLS_Local(0,2,X_WIDTH,Y_WIDTH);
  57   3              //OLED_P6x8Str(2,2,"Enter Wifi Config!");
  58   3              break;
  59   3            //重置WiFi模组后接收WIFI模组回复
  60   3            case 0x0c:
  61   3              //OLED_CLS_Local(0,2,X_WIDTH,Y_WIDTH);
  62   3              //OLED_P6x8Str(2,2,"Wifi Reset Success!");
  63   3              break;
  64   3            //WiFi模组向MCU推送WiFi状态
  65   3            case 0x0d:
  66   3                MCU_OLED_MessageShow(RX1_Buffer[4],RX1_Buffer[8],RX1_Buffer[9]);
  67   3                if(Phone_flag){MCU_OLED_StatusChange(0x00);}
  68   3                Data_Encapsulation(Mcu_send,9,0x0e,Sn,0x00);
  69   3              break;
  70   3            case 0x0f:Data_Encapsulation(Mcu_send,9,0x10,Sn,0x00);break;
  71   3            //WiFi模组非法数据包通知
  72   3            case 0x11:Data_Encapsulation(Mcu_send,10,0x12,Sn,RX1_Buffer[8]);break;      
  73   3            //MCU请求WiFi进入可绑定模式，WiFi模组回复 
  74   3            case 0x16:
  75   3              break;    
  76   3            //MCU请求获取网络时间，WiFi模组回复 
  77   3            case 0x18:
  78   3              break;
  79   3            case 0x2a:
  80   3              //MCU请求WiFi重启，WiFi模组回复
  81   3              break;
  82   3            }
  83   2            RST_Uart_Timer();
  84   2        } 
  85   1      }
  86          //========================================================================
  87          // 函数: void UART_Send_Processing()
  88          // 描述: UART1发送处理函数
  89          // 参数: 无
  90          // 返回: 无
  91          // 版本: V1.0, 2020.04.24
  92          //========================================================================
  93          void UART_Send_Processing()
  94          {
  95   1        
  96   1        unsigned char flag=0;
  97   1        /**  配置WiFi模式(Soft模式)  **/
  98   1        if(Set_soft_flag==0)      {Delay_ms(10);  if(Set_soft_flag==0)      {flag=0x01;} }
  99   1        /**  配置WiFi模式(AP模式)  **/
 100   1        if(Set_AP_flag==0)        {Delay_ms(10);  if(Set_AP_flag==0)        {flag=0x02;} }
 101   1        /**  重置WiFi信息  **/
 102   1        if(Reset_message_flag==0) {Delay_ms(10);  if(Reset_message_flag==0) {flag=0x03;} }
 103   1        /**  WiFi进入可绑定模式  **/
 104   1        if(Bindable_wifi_flag==0) {Delay_ms(10);  if(Bindable_wifi_flag==0) {flag=0x04;} }
 105   1        /**   重启WiFi模组   **/
 106   1        if(Restart_wifi_flag==0)  {Delay_ms(10);  if(Restart_wifi_flag==0)  {flag=0x05;} }
 107   1        if(flag!=0&&Wifi_flag==1)
 108   1        {
 109   2          REN=0;
 110   2          if(flag<=0x05){OLED_CLS_Local(0,2,X_WIDTH,Y_WIDTH);}
 111   2          Sn=Sn+0x01;
 112   2          switch(flag)
 113   2          {
 114   3            /**  配置WiFi模式(Soft模式)  **/
 115   3            case 0x01:
 116   3                OLED_P6x8Str(2,2,"Configure Wifi:Soft");
C51 COMPILER V9.60.0.0   MCU_HAND_UART                                                     05/31/2020 18:43:52 PAGE 3   

 117   3                Data_Encapsulation(Mcu_send,10,0x09,Sn,0x01);
 118   3              break;
 119   3            /**  配置WiFi模式(AP模式)  **/
 120   3            case 0x02:
 121   3                OLED_P6x8Str(2,2,"Configure Wifi:AP");
 122   3                Data_Encapsulation(Mcu_send,10,0x09,Sn,0x02);
 123   3              break;
 124   3            /**  重置WiFi信息  **/
 125   3            case 0x03:
 126   3                OLED_P6x8Str(2,2,"Reset Wifi!");
 127   3                Data_Encapsulation(Mcu_send,9,0x0b,Sn,0x00);
 128   3              break;
 129   3            /**  WiFi进入可绑定模式  **/
 130   3            case 0x04:
 131   3                OLED_P6x8Str(2,2,"Enter bindable mode!");
 132   3                Data_Encapsulation(Mcu_send,9,0x15,Sn,0x00);
 133   3              break;
 134   3            /**   重启WiFi模组   **/
 135   3            case 0x05:
 136   3                OLED_P6x8Str(2,2,"Restart Wifi!");
 137   3                Data_Encapsulation(Mcu_send,9,0x29,Sn,0x00);
 138   3              break;
 139   3          }
 140   2        }
 141   1        while(Set_soft_flag==0||Set_AP_flag==0||Reset_message_flag==0||Bindable_wifi_flag==0||Restart_wifi_flag==
             -0);
 142   1        RST_Uart_Timer();
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    911    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =      1       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
