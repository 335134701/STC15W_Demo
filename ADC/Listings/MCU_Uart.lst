C51 COMPILER V9.60.0.0   MCU_UART                                                          03/13/2020 17:45:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MCU_UART
OBJECT MODULE PLACED IN .\Objects\MCU_Uart.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE MCU_Uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEFINE(DEBUG_ENABLE_SEMIHOST) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\MCU_Uart.lst) TABS(2) OBJECT(.\Objects\MCU_Uart.obj)

line level    source

   1          #include  "MCU_Config.h"
   2          
   3          /*************  本地变量声明  **************/
   4          u8 xdata  RX1_Buffer[RX1_Length]; //接收缓冲
   5          
   6          
   7          u8 RX1_len; //接收数据长度
   8          
   9          
  10          bit B_TX1_Busy; // 发送忙标志
  11          //========================================================================
  12          // UART引脚说明:
  13          // UART1:(默认)P3^0,P3^1;   (可选)P3^6,P3^7; P1^6,P1^7;
  14          //========================================================================
  15          
  16          //========================================================================
  17          // 函数: SetTimer2Baudraye(u16 dat)
  18          // 描述: 设置Timer2做波特率发生器。
  19          // 参数: dat: Timer2的重装值.
  20          // 返回: none.
  21          // 版本: VER1.0
  22          // 日期: 2020-03-08
  23          // 备注: 
  24          //========================================================================
  25          void  SetTimer2Baudraye(u16 dat)  //使用Timer2做波特率
  26          {
  27   1        AUXR &= ~(1<<4);  //Timer stop
  28   1        AUXR &= ~(1<<3);  //Timer2 set As Timer
  29   1        AUXR |=  (1<<2);  //Timer2 set as 1T mode
  30   1        TH2 = dat / 256;
  31   1        TL2 = dat % 256;
  32   1        IE2  &= ~(1<<2);  //禁止中断
  33   1        AUXR |=  (1<<4);  //Timer run enable
  34   1      }
  35          
  36          //========================================================================
  37          // 函数: void UART1_config(u8 brt)
  38          // 描述: UART1初始化函数。
  39          // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
  40          // 返回: none.
  41          // 版本: VER1.0
  42          // 日期: 2020-03-08
  43          // 备注: 
  44          //========================================================================
  45          void  UART1_config(u8 brt)  
  46          {
  47   1        /*********** 波特率使用定时器2 *****************/
  48   1        if(brt == 2)
  49   1        {
  50   2          AUXR |= 0x01;   //S1 BRT Use Timer2;
  51   2          SetTimer2Baudraye(65536UL - (MAIN_Fosc / 4) / UART_BaudRate1);
  52   2        }
  53   1      
  54   1        /*********** 波特率使用定时器1 *****************/
C51 COMPILER V9.60.0.0   MCU_UART                                                          03/13/2020 17:45:52 PAGE 2   

  55   1        else
  56   1        {
  57   2          TR1 = 0;
  58   2          AUXR &= ~0x01;    //S1 BRT Use Timer1;
  59   2          AUXR |=  (1<<6);  //Timer1 set as 1T mode
  60   2          TMOD &= ~(1<<6);  //Timer1 set As Timer
  61   2          TMOD &= ~0x30;    //Timer1_16bitAutoReload;
  62   2          TH1 = (65536UL - (MAIN_Fosc / 4) / UART_BaudRate1) / 256;
  63   2          TL1 = (65536UL - (MAIN_Fosc / 4) / UART_BaudRate1) % 256;
  64   2          ET1 = 0;  //禁止中断
  65   2          INT_CLKO &= ~0x02;  //不输出时钟
  66   2          TR1  = 1;
  67   2        }
  68   1        /*************************************************/
  69   1        SCON = (SCON & 0x3f) | (1<<6);  // 8位数据, 1位起始位, 1位停止位, 无校验
  70   1      //PS  = 1;  //高优先级中断
  71   1        ES  = 1;  //允许中断
  72   1        REN = 1;  //允许接收
  73   1        P_SW1 = P_SW1 & 0x3f; //切换到 P3.0 P3.1
  74   1      //P_SW1 = (P_SW1 & 0x3f) | (1<<6);  //切换到P3.6 P3.7
  75   1      //P_SW1 = (P_SW1 & 0x3f) | (2<<6);  //切换到P1.6 P1.7 (必须使用内部时钟)
  76   1      
  77   1        memset(RX1_Buffer,0,RX1_Length);
  78   1        B_TX1_Busy  = 0;
  79   1        RX1_len   = 0;
  80   1      }
  81          
  82          
  83          //========================================================================
  84          // 函数: SendString1(u8 *puts)
  85          // 描述: Uart1发送数据函数
  86          // 参数: *puts: 发送数据
  87          // 返回: none.
  88          // 版本: VER1.0
  89          // 日期: 2020-03-08
  90          // 备注: 
  91          //========================================================================
  92          void SendString1(u8 *puts)
  93          {
  94   1          for (; *puts != 0;  puts++)
  95   1          {
  96   2            B_TX1_Busy = 1;   //标志发送忙
  97   2            SBUF = *puts;   //发一个字节
  98   2            while(B_TX1_Busy);  //等待发送完成
  99   2          }
 100   1      }
 101          
 102          
 103          //========================================================================
 104          // 函数: Cl_RX_Buffer(u8 *puts,u8 *len)
 105          // 描述: Uart清理函数
 106          // 参数: *puts: 发送数据缓存，*len缓存中数据长度
 107          // 返回: none.
 108          // 版本: VER1.0
 109          // 日期: 2020-03-08
 110          // 备注: 
 111          //========================================================================
 112          void Cl_RX_Buffer(u8 *puts,u8 *len)
 113          {
 114   1        *len=0;
 115   1        memset(puts,0,*len);
 116   1      }
C51 COMPILER V9.60.0.0   MCU_UART                                                          03/13/2020 17:45:52 PAGE 3   

 117          
 118          
 119          /********************* UART1中断函数************************/
 120          void UART1_int (void) interrupt UART1_VECTOR
 121          {
 122   1        if(RI)
 123   1        {
 124   2          RI = 0;
 125   2          RX1_Buffer[RX1_len] = SBUF;
 126   2          if(++RX1_len >= RX1_Length) RX1_len = 0;
 127   2        }
 128   1      
 129   1        if(TI)
 130   1        {
 131   2          TI = 0;
 132   2          B_TX1_Busy = 0;
 133   2        }
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    248    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    257       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
