C51 COMPILER V9.60.0.0   MCU_ADC                                                           03/13/2020 17:45:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MCU_ADC
OBJECT MODULE PLACED IN .\Objects\MCU_ADC.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE MCU_ADC.c LARGE OPTIMIZE(8,SPEED) BROWSE DEFINE(DEBUG_ENABLE_SEMIHOST) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\MCU_ADC.lst) TABS(2) OBJECT(.\Objects\MCU_ADC.obj)

line level    source

   1          #include  "MCU_Config.h"
   2          
   3          
   4          
   5          
   6          //========================================================================
   7          // 函数: void ADC_Init(void)
   8          // 描述: ADC初始化
   9          // 参数: channel: 选择要转换的ADC.
  10          // 返回: 10位ADC结果.
  11          // 版本: V1.0, 2020.03.09
  12          //========================================================================
  13          void ADC_Init(void)
  14          {
  15   1            P1ASF=0x01;   //根据原理图引脚定义，使用P1.0~P1.7做ADC，若使用某一位，则将该位置1，如P1.2，则值为0x04
  16   1            //sfr ADC_CONTR = 0xBC;   ADC_POWER SPEED1 SPEED0 ADC_FLAG ADC_START CHS2 CHS1 CHS0 0000,0000 /* AD 转换
             -控制寄存器 */ 
  17   1            ADC_CONTR = 0xE0;     //90T, ADC power on
  18   1      }
  19          //========================================================================
  20          // 函数: u16  Get_ADC10bitResult(u8 channel)
  21          // 描述: 查询法读一次ADC结果.
  22          // 参数: channel: 选择要转换的ADC.
  23          // 返回: 10位ADC结果.
  24          // 版本: V1.0, 2020.03.09
  25          //========================================================================
  26          u16 Get_ADC10bitResult(u8 channel)  //channel = 0~7
  27          {
  28   1        ADC_RES = 0;
  29   1        ADC_RESL = 0;
  30   1      
  31   1        ADC_CONTR = (ADC_CONTR & 0xe0) | 0x08 | channel;  //start the ADC
  32   1        NOP(4);
  33   1      
  34   1        while((ADC_CONTR & 0x10) == 0)  ; //wait for ADC finish
  35   1        ADC_CONTR &= ~0x10;   //清除ADC结束标志
  36   1        return  (((u16)ADC_RES << 2) | (ADC_RESL & 3));
  37   1      }
  38          //========================================================================
  39          // 函数: void Int_cov_Str(u8 *buf,u16 buf_len,u16 num)
  40          // 描述: 将数值转为字符数组
  41          // 参数: buf转换后的字符数组，buf_len字符数组长度，num需要进行转换的数字
  42          // 返回: 10位ADC结果.
  43          // 版本: V1.0, 2020.03.09
  44          //========================================================================
  45          void Int_cov_Str(u8 *buf,u16 buf_len,u16 num)
  46          { 
  47   1          u16 len=0,i=0,j=0,tem=0,mem=0,count=0;
  48   1          if(num>0&&num<10){count=1;}
  49   1          if(num>=10&&num<100){count=2;}
  50   1          if(num>=100&&num<1000){count=3;}
  51   1          if(num>=1000&&num<10000){count=4;}
  52   1          if(count>buf_len){return ;}
  53   1          if(count>2){
C51 COMPILER V9.60.0.0   MCU_ADC                                                           03/13/2020 17:45:52 PAGE 2   

  54   2              for(i=0;i<count-2;i++)
  55   2              {
  56   3                  for(mem=1,j=0;j<count-1;j++){mem=mem*10;}
  57   3                  tem=num/mem;
  58   3                  num=num-tem*mem;
  59   3                  buf[i]=tem+'0';
  60   3              }
  61   2              buf[count-2]=num/10+'0';buf[count-1]=num%10+'0';
  62   2          }
  63   1          else if(count==2){buf[0]=num/10+'0';buf[1]=num%10+'0';}
  64   1          else if(count==1){buf[0]=num+'0';}
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    670    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
