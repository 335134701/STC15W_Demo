C51 COMPILER V9.60.0.0   MCU_PWM                                                           03/11/2020 16:32:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MCU_PWM
OBJECT MODULE PLACED IN .\Objects\MCU_PWM.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE MCU_PWM.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\MCU_PWM.lst) TABS(2) OBJECT(.\Objects\MCU_PWM.obj)

line level    source

   1          #include  "MCU_Config.h"
   2          
   3          u16 PWM_high,PWM_low; //ÖÐ¼ä±äÁ¿£¬ÓÃ»§ÇëÎðÐÞ¸Ä¡£
   4          
   5          //========================================================================
   6          // º¯Êý: u8 Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
   7          // ÃèÊö: ¶¨Ê±Æ÷³õÊ¼»¯³ÌÐò.
   8          // ²ÎÊý: TIMx: ½á¹¹²ÎÊý,Çë²Î¿¼timer.hÀïµÄ¶¨Òå.
   9          // ·µ»Ø: ³É¹¦·µ»Ø0, ¿Õ²Ù×÷·µ»Ø1,´íÎó·µ»Ø2.
  10          // °æ±¾: V1.0, 2020.03.09
  11          //========================================================================
  12          u8  Timer_Init(u8 TIM, TIM_InitTypeDef *TIMx)
  13          {
  14   1        if(TIM > Timer4)  return 1; //¿Õ²Ù×÷
  15   1      
  16   1        if(TIM == Timer0)
  17   1        {
  18   2          if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2; //´íÎó
  19   2          TR0 = 0;    //Í£Ö¹¼ÆÊý
  20   2          ET0 = 0;  //½ûÖ¹ÖÐ¶Ï
  21   2          PT0 = 0;  //µÍÓÅÏÈ¼¶ÖÐ¶Ï
  22   2          TMOD &= 0xf0; //¶¨Ê±Ä£Ê½, 16Î»×Ô¶¯ÖØ×°
  23   2          AUXR &= ~0x80;  //12TÄ£Ê½, 
  24   2          INT_CLKO &= ~0x01;  //²»Êä³öÊ±ÖÓ
  25   2          if(TIMx->TIM_Interrupt == ENABLE)   ET0 = 1;  //ÔÊÐíÖÐ¶Ï
  26   2          if(TIMx->TIM_Polity == PolityHigh)    PT0 = 1;  //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
  27   2          TMOD |= TIMx->TIM_Mode; //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3: 16Î»×Ô¶¯ÖØ×°, ²
             -»¿ÉÆÁ±ÎÖÐ¶Ï
  28   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  0x80;  //1T
  29   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  TMOD |=  0x04;  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
  30   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;  //Êä³öÊ±ÖÓ
  31   2          
  32   2          TH0 = (u8)(TIMx->TIM_Value >> 8);
  33   2          TL0 = (u8)TIMx->TIM_Value;
  34   2          if(TIMx->TIM_Run == ENABLE) TR0 = 1;  //¿ªÊ¼ÔËÐÐ
  35   2          return  0;    //³É¹¦
  36   2        }
  37   1      
  38   1        if(TIM == Timer1)
  39   1        {
  40   2          if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2; //´íÎó
  41   2          TR1 = 0;  //Í£Ö¹¼ÆÊý
  42   2          ET1 = 0;  //½ûÖ¹ÖÐ¶Ï
  43   2          PT1 = 0;  //µÍÓÅÏÈ¼¶ÖÐ¶Ï
  44   2          TMOD &=  0x0f;  //¶¨Ê±Ä£Ê½, 16Î»×Ô¶¯ÖØ×°
  45   2          AUXR &= ~0x40;  //12TÄ£Ê½, 
  46   2          INT_CLKO &= ~0x02;  //²»Êä³öÊ±ÖÓ
  47   2          if(TIMx->TIM_Interrupt == ENABLE)   ET1 = 1;  //ÔÊÐíÖÐ¶Ï
  48   2          if(TIMx->TIM_Polity == PolityHigh)    PT1 = 1;  //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
  49   2          TMOD |= (TIMx->TIM_Mode << 4);  //¹¤×÷Ä£Ê½,0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°
  50   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  0x40;  //1T
  51   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  TMOD |=  0x40;  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
  52   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;  //Êä³öÊ±ÖÓ
  53   2          
C51 COMPILER V9.60.0.0   MCU_PWM                                                           03/11/2020 16:32:00 PAGE 2   

  54   2          TH1 = (u8)(TIMx->TIM_Value >> 8);
  55   2          TL1 = (u8)TIMx->TIM_Value;
  56   2          if(TIMx->TIM_Run == ENABLE) TR1 = 1;  //¿ªÊ¼ÔËÐÐ
  57   2          return  0;    //³É¹¦
  58   2        }
  59   1      
  60   1        if(TIM == Timer2)   //Timer2,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  61   1        {
  62   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return 2;
  63   2          AUXR &= ~0x1c;    //Í£Ö¹¼ÆÊý, ¶¨Ê±Ä£Ê½, 12TÄ£Ê½
  64   2          IE2  &= ~(1<<2);  //½ûÖ¹ÖÐ¶Ï
  65   2          INT_CLKO &= ~0x04;  //²»Êä³öÊ±ÖÓ
  66   2          if(TIMx->TIM_Interrupt == ENABLE)     IE2  |=  (1<<2);  //ÔÊÐíÖÐ¶Ï
  67   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   AUXR |=  (1<<2);  //1T
  68   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  AUXR |=  (1<<3);  //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
  69   2          if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;  //Êä³öÊ±ÖÓ
  70   2      
  71   2          TH2 = (u8)(TIMx->TIM_Value >> 8);
  72   2          TL2 = (u8)TIMx->TIM_Value;
  73   2          if(TIMx->TIM_Run == ENABLE) AUXR |=  (1<<4);  //¿ªÊ¼ÔËÐÐ
  74   2          return  0;    //³É¹¦
  75   2        }
  76   1      
  77   1        if(TIM == Timer3)   //Timer3,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  78   1        {
  79   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return 2;
  80   2          T4T3M &= 0xf0;    //Í£Ö¹¼ÆÊý, ¶¨Ê±Ä£Ê½, 12TÄ£Ê½, ²»Êä³öÊ±ÖÓ
  81   2          IE2  &= ~(1<<5);  //½ûÖ¹ÖÐ¶Ï
  82   2          if(TIMx->TIM_Interrupt == ENABLE)     IE2  |=  (1<<5);  //ÔÊÐíÖÐ¶Ï
  83   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   T4T3M |=  (1<<1); //1T
  84   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  T4T3M |=  (3<<1); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
  85   2          if(TIMx->TIM_ClkOut == ENABLE)  T4T3M |=  1;  //Êä³öÊ±ÖÓ
  86   2      
  87   2          TH3 = (u8)(TIMx->TIM_Value >> 8);
  88   2          TL3 = (u8)TIMx->TIM_Value;
  89   2          if(TIMx->TIM_Run == ENABLE) T4T3M |=  (1<<3); //¿ªÊ¼ÔËÐÐ
  90   2          return  0;    //³É¹¦
  91   2        }
  92   1      
  93   1        if(TIM == Timer4)   //Timer4,¹Ì¶¨Îª16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÎÞÓÅÏÈ¼¶
  94   1        {
  95   2          if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)  return 2;
  96   2          T4T3M &= 0x0f;    //Í£Ö¹¼ÆÊý, ¶¨Ê±Ä£Ê½, 12TÄ£Ê½, ²»Êä³öÊ±ÖÓ
  97   2          IE2  &= ~(1<<6);  //½ûÖ¹ÖÐ¶Ï
  98   2          if(TIMx->TIM_Interrupt == ENABLE)     IE2  |=  (1<<6);  //ÔÊÐíÖÐ¶Ï
  99   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)   T4T3M |=  (1<<5); //1T
 100   2          if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)  T4T3M |=  (3<<5); //¶ÔÍâ¼ÆÊý»ò·ÖÆµ
 101   2          if(TIMx->TIM_ClkOut == ENABLE)  T4T3M |=  (1<<4); //Êä³öÊ±ÖÓ
 102   2      
 103   2          TH4 = (u8)(TIMx->TIM_Value >> 8);
 104   2          TL4 = (u8)TIMx->TIM_Value;
 105   2          if(TIMx->TIM_Run == ENABLE) T4T3M |=  (1<<7); //¿ªÊ¼ÔËÐÐ
 106   2          return  0;    //³É¹¦
 107   2        }
 108   1        return 2; //´íÎó
 109   1      }
 110          
 111          //========================================================================
 112          // º¯Êý: void Timer_config(void)
 113          // ÃèÊö: ¶¨Ê±Æ÷ÅäÖÃº¯Êý
 114          // ²ÎÊý: ÎÞ
 115          // ·µ»Ø: ÎÞ
C51 COMPILER V9.60.0.0   MCU_PWM                                                           03/11/2020 16:32:00 PAGE 3   

 116          // °æ±¾: V1.0, 2020.03.09
 117          //========================================================================
 118          void  Timer_Config(void)
 119          {
 120   1        TIM_InitTypeDef   TIM_InitStructure;          //½á¹¹¶¨Òå
 121   1        TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
 122   1        TIM_InitStructure.TIM_Polity    = PolityLow;      //Ö¸¶¨ÖÐ¶ÏÓÅÏÈ¼¶, PolityHigh,PolityLow
 123   1        TIM_InitStructure.TIM_Interrupt = ENABLE;       //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE
 124   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;     //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
 125   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
 126   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 200);    //³õÖµ,
 127   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
 128   1        Timer_Init(Timer0,&TIM_InitStructure);        //³õÊ¼»¯Timer0    Timer0,Timer1,Timer2,Timer3,Timer4
 129   1      /*
 130   1        TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload
 131   1        TIM_InitStructure.TIM_Polity    = PolityLow;      //Ö¸¶¨ÖÐ¶ÏÓÅÏÈ¼¶, PolityHigh,PolityLow
 132   1        TIM_InitStructure.TIM_Interrupt = ENABLE;       //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE
 133   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;     //Ö¸¶¨Ê±ÖÓÔ´, TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_Ext
 134   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
 135   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / 2000);   //³õÖµ,
 136   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
 137   1        Timer_Init(Timer1,&TIM_InitStructure);        //³õÊ¼»¯Timer1    Timer0,Timer1,Timer2,Timer3,Timer4
 138   1      
 139   1        TIM_InitStructure.TIM_Interrupt = ENABLE;       //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE. (×¢Òâ: Timer2¹Ì¶¨Îª16Î»×Ô
             -¶¯ÖØ×°, ÖÐ¶Ï¹Ì¶¨ÎªµÍÓÅÏÈ¼¶)
 140   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;    //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
 141   1        TIM_InitStructure.TIM_ClkOut    = DISABLE;        //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
 142   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / (1000*12));    //³õÖµ
 143   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
 144   1        Timer_Init(Timer2,&TIM_InitStructure);        //³õÊ¼»¯Timer2    Timer0,Timer1,Timer2,Timer3,Timer4
 145   1      
 146   1        TIM_InitStructure.TIM_Interrupt = ENABLE;       //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE. (×¢Òâ: Timer3¹Ì¶¨Îª16Î»×Ô
             -¶¯ÖØ×°, ÖÐ¶Ï¹Ì¶¨ÎªµÍÓÅÏÈ¼¶)
 147   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;    //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
 148   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
 149   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / (200*12));   //³õÖµ
 150   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
 151   1        Timer_Init(Timer3,&TIM_InitStructure);        //³õÊ¼»¯Timer3    Timer0,Timer1,Timer2,Timer3,Timer4
 152   1      
 153   1        TIM_InitStructure.TIM_Interrupt = DISABLE;        //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE. (×¢Òâ: Timer4¹Ì¶¨Îª16Î»×
             -Ô¶¯ÖØ×°, ÖÐ¶Ï¹Ì¶¨ÎªµÍÓÅÏÈ¼¶)
 154   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;    //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
 155   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
 156   1        TIM_InitStructure.TIM_Value     = 65536UL - (MAIN_Fosc / (100*12));   //³õÖµ
 157   1        TIM_InitStructure.TIM_Run       = ENABLE;       //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
 158   1        Timer_Init(Timer4,&TIM_InitStructure);        //³õÊ¼»¯Timer4    Timer0,Timer1,Timer2,Timer3,Timer4
 159   1        */
 160   1      }
 161          //========================================================================
 162          // º¯Êý: void PWM_Set(u16 duty)
 163          // ÃèÊö: PWMÉèÖÃÕ¼¿Õ±Èº¯Êý(Õ¼¿Õ±È¼´¸ßµçÑ¹ÔÚÕû¸öPWMÖÜÆÚÖÐµÄ±ÈÂÊ)
 164          // ²ÎÊý: duty: ¸ßµçÑ¹Õ¼ÓÃÊ±ÖÓÖÜÆÚÊý
 165          // ·µ»Ø: ³É¹¦·µ»Ø0, ¿Õ²Ù×÷·µ»Ø1,´íÎó·µ»Ø2.
 166          // °æ±¾: V1.0, 2020.03.09
 167          //========================================================================
 168          void PWM_Set(u16 duty)
C51 COMPILER V9.60.0.0   MCU_PWM                                                           03/11/2020 16:32:00 PAGE 4   

 169          {
 170   1        if( duty > PWM_HIGH_MAX)    duty = PWM_HIGH_MAX;  //Èç¹ûÐ´Èë´óÓÚ×î´óÕ¼¿Õ±ÈÊý¾Ý£¬ÔòÇ¿ÖÆÎª×î´óÕ¼¿Õ±È¡£
 171   1        if( duty < PWM_HIGH_MIN)    duty = PWM_HIGH_MIN;  //Èç¹ûÐ´ÈëÐ¡ÓÚ×îÐ¡Õ¼¿Õ±ÈÊý¾Ý£¬ÔòÇ¿ÖÆÎª×îÐ¡Õ¼¿Õ±È¡£
 172   1        EA = 0;
 173   1        PWM_high = 65536UL- duty; //×°ÔØPWM¸ßµçÆ½Ê±¼ä
 174   1        PWM_low  = 65536UL- (PWM_CYCLE - duty);             //×°ÔØPWMµÍµçÆ½Ê±¼ä
 175   1        EA = 1;
 176   1      }
 177          
 178          
 179          
 180          /********************* Timer0ÖÐ¶Ïº¯Êý************************/
 181          void Timer0_Int (void) interrupt TIMER0_VECTOR
 182          {
 183   1         if(P35)
 184   1        {
 185   2          TH0 = (u8)(PWM_low >> 8); //Èç¹ûÊÇÊä³ö¸ßµçÆ½£¬Ôò×°ÔØµÍµçÆ½Ê±¼ä¡£
 186   2          TL0 = (u8)PWM_low;
 187   2        }
 188   1        else
 189   1        {
 190   2          TH0 = (u8)(PWM_high >> 8);  //Èç¹ûÊÇÊä³öµÍµçÆ½£¬Ôò×°ÔØ¸ßµçÆ½Ê±¼ä¡£
 191   2          TL0 = (u8)PWM_high;
 192   2        }
 193   1      }
 194          
 195          /********************* Timer1ÖÐ¶Ïº¯Êý************************/
 196          /*
 197          void Timer1_Int (void) interrupt TIMER1_VECTOR
 198          {
 199             P11 = ~P11;
 200          
 201          }
 202          */
 203          /********************* Timer2ÖÐ¶Ïº¯Êý************************/
 204          /*
 205          void Timer2_Int (void) interrupt TIMER2_VECTOR
 206          {
 207            P12 = ~P12;
 208          }
 209          */
 210          /********************* Timer3ÖÐ¶Ïº¯Êý************************/
 211          /*
 212          void Timer3_Int (void) interrupt TIMER3_VECTOR
 213          {
 214            P13 = ~P13;
 215          }
 216          */
 217          /********************* Timer4ÖÐ¶Ïº¯Êý************************/
 218          /*
 219          void Timer5_Int (void) interrupt TIMER4_VECTOR
 220          {
 221            P14 = ~P14;
 222          }
 223          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    767    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       8
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MCU_PWM                                                           03/11/2020 16:32:00 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
